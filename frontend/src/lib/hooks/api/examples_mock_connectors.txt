KAFKA_CLUSTERS_0_NAME: "kafka-afc-test-env"
KAFKA_CLUSTERS_0_READONLY: "true"
KAFKA_CLUSTERS_0_SSL_VERIFYSSL: "false"
KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-afc-01.test.env:9092,kafka-afc-02.test.env:9092,kafka-afc-03.test.env:9092"

// Mock Data
const mockConnectors: FullConnectorInfo[] = [
  {
    connect: 'kafka-connect-di.test.env',
    name: 'sink.clickhouse.protobuf.b2b.mt5.users.events',
    connectorClass:
      'com.exness.datahub.kafka.connect.clickhouse.protobuf.ClickhouseSinkConnector',
    type: ConnectorType.SINK,
    topics: ['b2b.mt5.users.events.ext_mt5_lp_real1'],
    status: {
      state: ConnectorState.RUNNING,
    },
    tasksCount: 2,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterB',
    name: 'connectorB',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSinkConnector',
    type: ConnectorType.SOURCE,
    topics: ['topic3'],
    status: {
      state: ConnectorState.RUNNING,
    },
    tasksCount: 1,
    failedTasksCount: 1,
  },
  {
    connect: 'clusterC',
    name: 'connectorC',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSourceConnector',
    type: ConnectorType.SINK,
    topics: ['topic4'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterD',
    name: 'connectorD',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSourceConnector',
    type: ConnectorType.SINK,
    topics: ['topic4'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterE',
    name: 'connectorE',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSourceConnector',
    type: ConnectorType.SOURCE,
    topics: ['topic5'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterD',
    name: 'connectorD1',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic9'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterR',
    name: 'connectorR',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic9', 'topic3'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ2',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ3',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ4',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ5',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ6',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ7',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ8',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ9',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ10',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ11',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ12',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ13',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ14',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ15',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.RESTARTING,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ16',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.FAILED,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ17',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.UNASSIGNED,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ',
    name: 'connectorQ18',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.STOPPED,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
  {
    connect: 'clusterQ2',
    name: 'connectorQ19',
    connectorClass: 'org.apache.kafka.connect.file.FileStreamSINKConnector',
    type: ConnectorType.SINK,
    topics: ['topic10', 'topic1'],
    status: {
      state: ConnectorState.TASK_FAILED,
    },
    tasksCount: 3,
    failedTasksCount: 0,
  },
];

// Mock API Function
function mockGetAllConnectors({ clusterName, search = '' }) {
  return new Promise<FullConnectorInfo[]>((resolve) => {
    resolve(mockConnectors);
  });
}

// Custom Hook
export function useMockConnectors(clusterName: string, search?: string) {
  return useQuery(
    ['connectors', clusterName, search],
    () => mockGetAllConnectors({ clusterName, search }),
    {
      select: (data) =>
        [...data].sort((a, b) => {
          if (a.name < b.name) return -1;
          if (a.name > b.name) return 1;
          return 0;
        }),
    }
  );
}
